on: push

jobs:

  code-format-c-cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install required packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends git clang-format
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
      - name: Run clang-format
        run: |
          ret=0
          while read f; do
            clang-format "$f" | diff -u "$f" - || ret=1
          done <<<"$(git ls-files \*.cpp \*.h \*.hpp)"
          exit "$ret"

  code-format-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install autopep8
        run: pip3 install autopep8
      - name: Run autopep8
        run: git ls-files \*.py | xargs autopep8 --diff --exit-code

  run-tests:
    runs-on: ubuntu-latest
    container: debian:buster
    steps:
      - uses: actions/checkout@v2
      - name: Install required packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y --no-install-recommends build-essential pkg-config cmake libblas-dev libopenblas-dev libatlas-base-dev
          apt-get clean
          rm -rf /var/lib/apt/lists/*
      - name: Build tests
        run: |
          mkdir build/
          cd build/
          cmake .. -DBUILD_TESTING=TRUE -DNO_QMKL6=TRUE
          make
      - name: Run tests
        run: |
          tail -n +1 /proc/cpuinfo /proc/meminfo
          echo
          cd build/
          ctest -V

  run-tests-mkl:
    runs-on: ubuntu-latest
    container: ubuntu:focal
    defaults:
      run:
        shell: bash
    steps:
      - name: Install required packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y --no-install-recommends ca-certificates curl gnupg pkg-config make cmake binutils libstdc++-9-dev
          curl --silent 'https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB' | apt-key add -
          echo 'deb https://apt.repos.intel.com/oneapi all main' | tee -a /etc/apt/sources.list.d/intel.list
          apt-get update
          apt-get install -y --no-install-recommends intel-oneapi-compiler-dpcpp-cpp intel-oneapi-mkl-devel
          apt-get clean
          rm -rf /var/lib/apt/lists/*
      - uses: actions/checkout@v2
      - name: Build tests
        run: |
          source /opt/intel/oneapi/setvars.sh
          sed -i 's/MKLROOT/prefix/g' /opt/intel/oneapi/mkl/latest/tools/pkgconfig/mkl-dynamic-lp64-iomp.pc
          mkdir build/
          cd build/
          cmake .. -DCMAKE_CXX_COMPILER=icpx -DBUILD_TESTING=TRUE -DNO_QMKL6=TRUE
          make
      - name: Run tests
        run: |
          tail -n +1 /proc/cpuinfo /proc/meminfo
          echo
          source /opt/intel/oneapi/setvars.sh
          cd build/
          ctest -V
